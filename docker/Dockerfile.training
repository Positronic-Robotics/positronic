# Run locally with:
#   docker run --rm -it --gpus all -v $PWD:/positronic -v /datasets:/datasets -v /outputs:/outputs positronic-training \
#     bash -lc 'uv pip install --no-deps -e /positronic && <your command>'
# This keeps package metadata in the container while letting live source edits take effect via the bind mount.
FROM nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    ffmpeg \
    libturbojpeg \
    && rm -rf /var/lib/apt/lists/*
ENV UV_LINK_MODE=copy
ENV PIP_DEFAULT_TIMEOUT=600
ENV UV_HTTP_TIMEOUT=600
RUN uv venv --python 3.11
ENV VIRTUAL_ENV=/.venv
ENV PATH=/$VIRTUAL_ENV/bin:$PATH
COPY pyproject.toml uv.lock ./
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --extra dev --no-install-project
COPY . /positronic
WORKDIR /positronic
RUN uv pip install --no-deps .
ENV PYTHONPATH=/positronic
CMD ["bash"]
