name: Announce merged PRs (main only)

on:
  push:
    branches: [ main ]

jobs:
  announce:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Find PR associated with this commit
        id: find_pr
        uses: actions/github-script@v7
        env:
          SHA: ${{ github.sha }}
        with:
          script: |
            const {owner, repo} = context.repo;
            const sha = process.env.SHA;
            const res = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner, repo, commit_sha: sha,
            });
            const pr = res.data.find(p => p.merged_at) || res.data[0];
            if (!pr) {
              core.setOutput('found', 'false');
              return;
            }
            core.setOutput('found', 'true');
            core.setOutput('num', pr.number.toString());
            core.setOutput('title', pr.title || '');
            core.setOutput('url', pr.html_url || '');
            core.setOutput('body', pr.body || '');
            core.setOutput('author', pr.user?.login || 'unknown');
            core.setOutput('merged_by', pr.merged_by?.login || 'unknown');
            core.setOutput('base', pr.base?.ref || 'main');

      - name: Stop if no PR
        if: steps.find_pr.outputs.found != 'true'
        run: echo "No associated PR found for this push (likely a direct push). Skipping."

      - name: Post Discord embed
        if: steps.find_pr.outputs.found == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}  # add this secret
          REPO: ${{ github.repository }}
          PR_NUM: ${{ steps.find_pr.outputs.num }}
          PR_TITLE: ${{ steps.find_pr.outputs.title }}
          PR_URL: ${{ steps.find_pr.outputs.url }}
          PR_AUTHOR: ${{ steps.find_pr.outputs.author }}
          MERGED_BY: ${{ steps.find_pr.outputs.merged_by }}
          BASE_BRANCH: ${{ steps.find_pr.outputs.base }}
          PR_BODY: ${{ steps.find_pr.outputs.body }}
        run: |
          body="${PR_BODY:-}"
          body="${body//$'\r'/}"
          body="${body:0:3500}"
          merged_by="${MERGED_BY:-unknown}"

          payload=$(jq -n \
            --arg repo "$REPO" \
            --arg num "$PR_NUM" \
            --arg title "$PR_TITLE" \
            --arg url "$PR_URL" \
            --arg body "$body" \
            --arg author "$PR_AUTHOR" \
            --arg base "$BASE_BRANCH" \
            --arg merged_by "$merged_by" \
            '{
              username: "GitHub",
              embeds: [{
                title: ("PR Merged: #"+$num+" \u2013 "+$title),
                url: $url,
                description: $body,
                color: 5814783,
                fields: [
                  { "name": "Repository", "value": $repo, "inline": true },
                  { "name": "Author", "value": ("@" + $author), "inline": true },
                  { "name": "Merged into", "value": ("`" + $base + "`"), "inline": true }
                ],
                footer: { "text": ("Merged by " + $merged_by) }
              }]
            }')

          if [ -z "$DISCORD_WEBHOOK_URL" ]; then
            echo "DISCORD_WEBHOOK_URL is empty. Did you create the secret?" >&2
            exit 1
          fi

          curl -sS -X POST -H "Content-Type: application/json" \
               -d "$payload" \
               "$DISCORD_WEBHOOK_URL"
